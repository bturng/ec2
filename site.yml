  - name: Provision an EC2 node
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    vars:
      instance_type: t2.micro
      hostname: jenkins
      security_group: jenkins
      image: ami-4728cb27
      region: us-west-2
      keypair: ansible_ec2
      count: 1
    tasks:
      - name: Launch new  Instance
        local_action: ec2 
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }}
                      wait=true 
                      region={{ region }} 
                      keypair={{ keypair }} 
                      count={{count}} 
        register: ec2

      # Use with_items to add each instances public IP to a new hostgroup for use in the next play.
      - name: Add new instances to host group
        local_action: add_host 
                      hostname={{ item.public_ip }} 
                      ansible_ssh_private_key_file=~/.ssh/{{ keypair }}.pem groupname=jenkins
        with_items: ec2.instances

      - name: Add instance to local host group
        local_action: lineinfile 
                      dest="./hosts" 
                      regexp="{{item.public_ip }}"
                      insertafter="\[jenkins\]" line="{{ item.public_ip }} 
                      ansible_ssh_private_key_file=~/.ssh/{{ keypair }}.pem"
        with_items: ec2.instances

      - name: Wait for SSH to come up
        local_action: wait_for host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
        with_items: ec2.instances

  - name: With the newly provisioned EC2 node configure nginx and Jenkins.  deploy ldap for authentication
    hosts: jenkins # This uses the hosts that we put into the in-memory hosts repository with the add_host module.
    sudo: yes # On EC2 nodes, this is automatically passwordless. 
    remote_user: ec2-user # This is the username for all ubuntu images, rather than root, or something weird.
    gather_facts: True  #We need to re-enable this, as we turned it off earlier.

    roles:
      - ntp
      - ldap
      - java
      - nginx
      - jenkins

    tasks:
      - name: Ensure the firewall is disabled and will not start on boot.
        service: name=firewalld state=stopped enabled=no

